doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Admisión de Paciente
    link(rel="icon", href="#", type="image/png")
    link(rel="stylesheet", href="/style.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css", rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js")
  body
    .navbar.navbar-expand-sm.bg-info.navbar-dark.p-3
        .container-fluid
            .navbar-brand
                h4.display-6.px-4.text-white Sistema de Información Hospitalaria
            .d-flex.ms-auto.align-items-center
                span.text-white.me-2=usuario.nombre_usuario
                a(href="/logout", title="Cerrar sesión")
                    i.fas.fa-sign-out-alt.text-white.mt-4

    .container
      h1.text-center.text-info Admisión de Paciente
      p Busca el paciente por DNI y completa el formulario para asignar una habitación:
      .row
        .col-md-4
          label(for="dni") DNI del paciente:
          input(type="text" name="dni" id="dni" required)
        .col-md-4
          button(type="button" class="btn btn-primary w-100" onclick="buscarPaciente()").mt-4 Buscar paciente
      .row
        label Paciente encontrado:
        h2#nombrePaciente.text-primary
        input(type="hidden" name="Genero" id="Genero" required)
      form#form-asignacion(action="/habitaciones/asignar-habitacion" method="POST").p-0
        .row
          .col-sm-4
            label(for="ala") Ala del hospital:
            select(name="ala" id="ala" required)
              option(value="" disabled selected) Selecciona un ala
              each item in ala_hospital
                option(value=item.ID) #{item.nombre_ala}, piso #{item.piso}
          .col-sm-4
            label(for="habitación") Tipo de habitación:
            select(name="tipo_habitacion" id="tipo" required)
              option(value="" disabled selected) Selecciona tipo
              option(value="1") Simple
              option(value="2") Doble
          .col-sm-4
            button(type="button", class="btn btn-primary w-100", onclick="buscarHabitacion()").mt-4 Buscar habitaciones

        .row.mt-4
          .col-12.mb-4
            h3.text-info.mb-3 Selecciona una cama disponible
            #habitacionesContainer.row.g-3
        input(type="hidden" name="ID_Paciente" id="ID_Paciente")
        input(type="hidden" id="camaIdOculto" name="ID_Cama")
        input(type="hidden" name="dni" id="dniOculto")
        button(type="submit", class="btn btn-success mt-3") Asignar habitación
      #mensaje-exito.alert.alert-success.d-none(role="alert")
      script.
        async function buscarPaciente() {
          const dni = document.getElementById('dni').value;
          if (!dni) return alert('Por favor ingrese un DNI.');
          try {
            const response = await fetch(`/modelo/paciente/${dni}`);
            if (!response.ok) return alert('Paciente no encontrado.');
            const paciente = await response.json();
            document.getElementById('nombrePaciente').textContent = `${paciente.Nombre} ${paciente.Apellido}`;

            document.querySelector('input[name="ID_Paciente"]').value = paciente.id;
            document.querySelector('input[name="Genero"]').value = paciente.Genero;
            document.getElementById('dniOculto').value = dni; // guarda el DNI en input hidden
          } catch (error) {
            alert('Error al buscar paciente.');
          }
        }
          document.getElementById('form-asignacion').addEventListener('submit', async function (e) {
            e.preventDefault();

            const form = e.target;
            const datos = new FormData(form);
            const valores = Object.fromEntries(datos.entries());

            try {
              const res = await fetch('/habitaciones/asignar-habitacion', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(valores)
              });

              const data = await res.json();

              if (data.success) {
                const mensaje = document.getElementById('mensaje-exito');
                mensaje.textContent = data.mensaje;
                mensaje.classList.remove('d-none');

                form.reset();
                document.getElementById('habitacionesContainer').innerHTML = '';
              } else {
                alert('Error: ' + data.error);
              }
            } catch (err) {
              alert('Hubo un error: ' + err.message);
            }
          }); 
        async function buscarHabitacion() {
          const genero = document.getElementById('Genero').value;
          const ala = document.getElementById('ala').value;
          const tipo = document.getElementById('tipo').value;

          if (!ala || !tipo) {
            return alert('Por favor seleccione un ala y tipo de habitación.');
          }

          try {
            const response = await fetch(`/habitaciones/buscar?ala=${ala}&tipo_habitacion=${tipo}&genero=${genero}`);
            const habitaciones = await response.json();
            const container = document.getElementById('habitacionesContainer');
            container.innerHTML = '';
            
            habitaciones.forEach(habitacion => {
              const card = document.createElement('div');
              card.className = 'col-md-6';
              card.innerHTML = `
                <div class="card shadow-sm mb-2">
                  <div class="card-header bg-light">
                    <strong class="text-secondary">Habitación ${habitacion.Numero}</strong>
                  </div>
                  <div class="card-body d-flex flex-wrap gap-3">
                    ${habitacion.camas.map(cama => `
                      <label class="cama-selector" style="cursor:pointer;">
                        <input type="radio" name="cama" value="${cama.ID}" required ${!cama.disponible ? 'disabled' : ''} style="display:none;">
                        <i class="fa-solid fa-bed fa-2x ${cama.disponible ? 'text-success' : 'text-danger'} me-2" title="${cama.disponible ? 'Cama disponible' : 'Cama ocupada'}" ${!cama.disponible ? 'style="opacity:0.5;"' : ''}></i>
                        <span>${cama.nombre}</span>
                      </label>
                    `).join('')}
                  </div>
                </div>
              `;
              container.appendChild(card);
            });

            // Agregar listeners para actualizar el input hidden con el ID de cama
            document.querySelectorAll('input[name="cama"]').forEach(input => {
              input.addEventListener('change', function () {
                document.getElementById('camaIdOculto').value = this.value;
              });
            });

          } catch (error) {
            alert('Error al buscar habitaciones.');
          } 
        }
      style.
        .cama-selector input[type="radio"]:checked + .fa-bed {
          color: #0dcaf0 !important;
          text-shadow: 0 0 8px #0dcaf0;
        }
    
    .row.justify-content-center
        .col-md-3.mb-4
            a(href="/recepcionista", class="text-decoration-none")
                .card.h-100.shadow.text-center
                    i.fa-solid.fa-hospital-user.fa-4x.text-info.mt-4
                    .card-body
                        h5.card-title.text-info Volver a Recepción
                        p.card-text Regresar a la página de recepción.
        .col-md-3.mb-4
            a(href="/Modificar", class="text-decoration-none")
                .card.h-100.shadow.text-center
                    i.fa-solid.fa-user-pen.fa-4x.text-info.mt-4
                    .card-body
                        h5.card-title.text-info Modificar o Actualizar
                        p.card-text Modificar o actualizar datos del paciente
        .col-md-3.mb-4
          // Botón para abrir el modal de gestión de turnos
          a(href="#", class="text-decoration-none", data-bs-toggle="modal", data-bs-target="#turnoModal")
            .card.h-100.shadow.text-center
              i.fa-solid.fa-calendar-check.fa-4x.text-info.mt-4
              .card-body
                h5.card-title.text-info Gestión de turno
                p.card-text Verifica los turnos de los pacientes ó asigna uno nuevo

          // Modal de gestión de turnos
          .modal.fade#turnoModal(tabindex="-1", aria-labelledby="turnoModalLabel", aria-hidden="true")
            .modal-dialog
              .modal-content
                .modal-header
                  h5.modal-title#turnoModalLabel Gestión de Turnos
                  button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Close")
                .modal-body.m-0.p-0
                  form#turnoForm
                    .mb-3
                      label.form-label(for="dni_paciente") DNI del paciente
                      input.form-control(type="text", id="dni_paciente", name="dni_paciente", placeholder="DNI del paciente")
                    .mb-3
                      label.form-label(for="medico") Médico
                      select.form-control(id="medico", name="medico")
                        option(value="" selected disabled) Seleccione un médico
                        option(value="Dr. Juan Pérez") Dr. Juan Pérez
                        option(value="Dra. Ana Gómez") Dra. Ana Gómez
                        option(value="Dr. Carlos Ruiz") Dr. Carlos Ruiz
                        option(value="Dra. Laura Fernández") Dra. Laura Fernández
                    .mb-3
                      label.form-label(for="fecha") Fecha
                      input.form-control(type="date", id="fecha", name="fecha")
                    .mb-3
                      label.form-label(for="hora") Hora
                      input.form-control(type="time", id="hora", name="hora")
                    .d-flex.justify-content-between
                      button.btn.btn-primary.m-3(type="submit") Asignar Turno
                      button.btn.btn-info.m-3(type="button", id="verTurnoBtn") Ver Turno

          script.

            document.addEventListener('DOMContentLoaded', function() {
              const form = document.getElementById('turnoForm');
              const verBtn = document.getElementById('verTurnoBtn');
              form.addEventListener('submit', function(e) {
                e.preventDefault();
                alert('Turno asignado (simulado)');
              });
              verBtn.addEventListener('click', function() {
                alert('Ver turno del paciente (simulado)');
              });
            });
