doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Recepción
    link(rel="icon", href="#", type="image/png")
    link(rel="stylesheet", href="/style.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css", rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js")
  body
    .navbar.navbar-expand-sm.bg-info.navbar-dark.p-3
        .container-fluid
            .navbar-brand
                h4.display-6.px-4.text-white Sistema de Información Hospitalaria
            .d-flex.ms-auto.align-items-center
                span.text-white.me-2=usuario.nombre_usuario
                a(href="/logout", title="Cerrar sesión")
                    i.fas.fa-sign-out-alt.text-white.mt-4

    .container.mt-5
        .row.justify-content-center
            .col-md-3.mb-4
              a(href="/registro", class="text-decoration-none h-100")
                .card.h-100.shadow.text-center
                  i.fa-solid.fa-user-plus.fa-4x.text-info.mt-4
                  .card-body
                    h5.card-title.text-info Registrar o Modificar Paciente
                    p.card-text Registra un nuevo paciente en el sistema.
            .col-md-3.mb-4
              a(href="/Admision", class="text-decoration-none h-100")
                .card.h-100.shadow.text-center
                  i.fa-solid.fa-bed.fa-4x.text-info.mt-4
                  .card-body
                    h5.card-title.text-info Admisión de Paciente
                    p.card-text Registra la admisión de un paciente en el hospital, asignando una cama y habitación.
            .col-md-3.mb-4
              a(href="/Modificar", class="text-decoration-none h-100")
                .card.h-100.shadow.text-center
                  i.fa-solid.fa-user-pen.fa-4x.text-info.mt-4
                  .card-body
                    h5.card-title.text-info Modificar o eliminar admisión
                    p.card-text Busca la lista de internaciones de un paciente en el hospital y modifica o elimina su admisión.
            .col-md-3.mb-4             
              // Botón para abrir el modal de gestión de turnos
              a(href="#", class="text-decoration-none h-100", data-bs-toggle="modal", data-bs-target="#turnoModal")
                .card.h-100.shadow.text-center
                  i.fa-solid.fa-calendar-check.fa-4x.text-info.mt-4
                  .card-body
                    h5.card-title.text-info Gestión de turno
                    p.card-text Verifica los turnos de los pacientes ó asigna uno nuevo

              // Modal de gestión de turnos
              .modal.fade#turnoModal(tabindex="-1", aria-labelledby="turnoModalLabel", aria-hidden="true")
                .modal-dialog
                  .modal-content
                    .modal-header
                      h5.modal-title#turnoModalLabel Gestión de Turnos
                      button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Close")
                    .modal-body.m-0.p-0
                      form#turnoForm.pb-0
                        .mb-3
                          label.form-label(for="dni_paciente") DNI del paciente
                          input.form-control(type="text", id="dni_paciente", name="dni_paciente", placeholder="DNI del paciente")
                        .mb-3
                          label.form-label(for="medico") Médico
                          select.form-control(id="medico", name="medico")
                            option(value="" selected disabled) Seleccione un médico
                            each medico in medicos
                              option(value=medico.id)= medico.nombre
                        .mb-3
                          label.form-label(for="fecha") Fecha
                          input.form-control(type="date", id="fecha", name="fecha")
                        .mb-3
                          label.form-label(for="hora") Hora
                          input.form-control(type="time", id="hora", name="hora")
                        .d-flex.justify-content-between
                          button.btn.btn-primary.m-3(type="submit") Asignar Turno
                          button.btn.btn-info.m-3(type="button", id="verTurnoBtn") Ver Turno
                      .d-flex.justify-content-center
                        form#formEliminarTurno(method="POST" style="display:none" onsubmit="return confirm('Si atiende al paciente, se elimina el turno asignado')").p-0.mb-2.w-50
                          button.btn.btn-success.mb-3(type="submit") Atender paciente
    script.
      document.addEventListener('DOMContentLoaded', () => {
        const turnoForm = document.getElementById('turnoForm');
        const verTurnoBtn = document.getElementById('verTurnoBtn');
        const eliminarForm = document.getElementById('formEliminarTurno');

        turnoForm.addEventListener('submit', async function (e) {
          e.preventDefault();
          const data = {
            dni_paciente: document.getElementById('dni_paciente').value,
            medico: document.getElementById('medico').value,
            fecha: document.getElementById('fecha').value,
            hora: document.getElementById('hora').value
          };
          if (!data.hora || !data.fecha || !data.dni_paciente || !data.medico) {
            alert('Debe completar todos los campos.');
            return;
          }
          // Validar que la fecha no sea pasada y que la hora sea futura si es hoy
          const hoy = new Date();
          const fechaInput = new Date(data.fecha + 'T' + data.hora);
          if (fechaInput < hoy) {
            alert('No se puede asignar un turno en el pasado.');
            return;
          }
          try {
            const res = await fetch('/turnos/crear', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(data)
            });

            if (res.ok) {
              alert('Turno asignado correctamente');
              turnoForm.reset();
              eliminarForm.style.display = "none";
            } else {
              alert('Error al asignar turno');
            }
          } catch (error) {
            console.error('Error en el envío:', error);
          }
        });

        verTurnoBtn.addEventListener('click', async () => {
          const dni = document.getElementById('dni_paciente').value;
          if (!dni) return alert('Ingrese un DNI primero');

          try {
            const res = await fetch(`/turnos/buscar/${dni}`);
            const turno = await res.json();

            document.getElementById('medico').value = turno.medico_id || '';
            document.getElementById('fecha').value = turno.fecha || '';
            document.getElementById('hora').value = turno.hora || '';

            eliminarForm.action = `/turnos/eliminar/${turno.id}`;
            eliminarForm.style.display = "block";
          } catch (error) {
            console.error('Error al consultar turnos:', error);
            alert('No se encontró un turno para ese paciente.');
          }
        });
      });